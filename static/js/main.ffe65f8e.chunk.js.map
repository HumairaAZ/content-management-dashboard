{"version":3,"sources":["components/Dashboard.js","App.js","index.js"],"names":["GET_POKEMONS","gql","_templateObject","_taggedTemplateLiteral","Dashboard","loading","error","data","useQuery","searchTerm","setSearchTerm","useState","sortType","setSortType","page","setPage","_jsx","CircularProgress","children","filteredPokemons","pokemons","filter","pokemon","name","toLowerCase","includes","sort","a","b","localeCompare","number","paginatedPokemons","slice","_jsxs","className","Typography","variant","gutterBottom","TextField","label","fullWidth","margin","onChange","e","target","value","FormControl","InputLabel","Select","MenuItem","Grid","container","spacing","map","item","xs","sm","md","lg","Card","CardMedia","component","alt","height","image","title","CardContent","color","id","Pagination","count","Math","ceil","length","event","App","Router","basename","CssBaseline","Container","Switch","Route","path","exact","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","React","StrictMode","document","getElementById"],"mappings":"yZAMA,MAAMA,EAAeC,YAAGC,MAAAC,YAAA,wGAsFTC,MA3Ef,WACE,MAAM,QAAEC,EAAO,MAAEC,EAAK,KAAEC,GAASC,YAASR,IACnCS,EAAYC,GAAiBC,mBAAS,KACtCC,EAAUC,GAAeF,mBAAS,WAClCG,EAAMC,GAAWJ,mBAAS,GAGjC,GAAIN,EAAS,OAAOW,cAACC,IAAgB,IACrC,GAAIX,EAAO,OAAOU,cAAA,KAAAE,SAAG,aAErB,MAAMC,EAAmBZ,EAAKa,SAC3BC,QAAOC,GAAWA,EAAQC,KAAKC,cAAcC,SAAShB,EAAWe,iBACjEE,MAAK,CAACC,EAAGC,IACS,SAAbhB,EACKe,EAAEJ,KAAKM,cAAcD,EAAEL,MAEzBI,EAAEG,OAASF,EAAEE,SAGlBC,EAAoBZ,EAAiBa,MAdtB,IAc6BlB,EAAO,GAdpC,GAcuDA,GAE5E,OACEmB,eAAA,OAAKC,UAAU,YAAWhB,SAAA,CACxBF,cAACmB,IAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAnB,SAAC,iCACtCF,cAACsB,IAAS,CACRC,MAAM,oBACNH,QAAQ,WACRI,WAAS,EACTC,OAAO,SACPC,SAAUC,GAAKjC,EAAciC,EAAEC,OAAOC,SAExCZ,eAACa,IAAW,CAACV,QAAQ,WAAWI,WAAS,EAACC,OAAO,SAAQvB,SAAA,CACvDF,cAAC+B,IAAU,CAAA7B,SAAC,YACZe,eAACe,IAAM,CACLH,MAAOjC,EACP8B,SAAUC,GAAK9B,EAAY8B,EAAEC,OAAOC,OACpCN,MAAM,UAASrB,SAAA,CAEfF,cAACiC,IAAQ,CAACJ,MAAM,SAAQ3B,SAAC,WACzBF,cAACiC,IAAQ,CAACJ,MAAM,OAAM3B,SAAC,eAG3BF,cAACkC,IAAI,CAACC,WAAS,EAACC,QAAS,EAAElC,SACxBa,EAAkBsB,KAAI/B,GACrBN,cAACkC,IAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAExC,SACrCe,eAAC0B,IAAI,CAAAzC,SAAA,CACHF,cAAC4C,IAAS,CACRC,UAAU,MACVC,IAAKxC,EAAQC,KACbwC,OAAO,MACPC,MAAO1C,EAAQ0C,MACfC,MAAO3C,EAAQC,KACflB,QAAQ,SAEV4B,eAACiC,IAAW,CAAAhD,SAAA,CACVF,cAACmB,IAAU,CAACE,cAAY,EAACD,QAAQ,KAAKyB,UAAU,KAAI3C,SACjDI,EAAQC,OAEXU,eAACE,IAAU,CAACC,QAAQ,QAAQ+B,MAAM,gBAAgBN,UAAU,IAAG3C,SAAA,CAAC,IAC5DI,EAAQQ,iBAf2BR,EAAQ8C,QAsBzDpD,cAACqD,IAAU,CACTC,MAAOC,KAAKC,KAAKrD,EAAiBsD,OA9DnB,IA+Df3D,KAAMA,EACN4B,SAAUA,CAACgC,EAAO7B,IAAU9B,EAAQ8B,OAI5C,ECrEe8B,MAff,WACE,OACE1C,eAAC2C,IAAM,CAACC,SAAS,gCAA+B3D,SAAA,CAC9CF,cAAC8D,IAAW,IACZ9D,cAAC+D,IAAS,CAAA7D,SACRF,cAAA,OAAKkB,UAAU,MAAKhB,SAClBF,cAACgE,IAAM,CAAA9D,SACLF,cAACiE,IAAK,CAACC,KAAK,IAAIC,OAAK,EAACtB,UAAWzD,YAM7C,E,2BCbA,MAAMgF,EAAS,IAAIC,IAAa,CAC9BC,IAAK,uCACLC,MAAO,IAAIC,MAGbC,IAASC,OACP1E,cAAC2E,IAAc,CAACP,OAAQA,EAAOlE,SAC7BF,cAAC4E,IAAMC,WAAU,CAAA3E,SACfF,cAAC2D,EAAG,QAGRmB,SAASC,eAAe,Q","file":"static/js/main.ffe65f8e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Dashboard.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { TextField, Grid, Card, CardContent, Typography, CardMedia, CircularProgress, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\n\nconst GET_POKEMONS = gql`\n  {\n    pokemons(first: 151) {\n      id\n      number\n      name\n      image\n    }\n  }\n`;\n\nfunction Dashboard() {\n  const { loading, error, data } = useQuery(GET_POKEMONS);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortType, setSortType] = useState('number');\n  const [page, setPage] = useState(1);\n  const itemsPerPage = 20;\n\n  if (loading) return <CircularProgress />;\n  if (error) return <p>Error :(</p>;\n\n  const filteredPokemons = data.pokemons\n    .filter(pokemon => pokemon.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    .sort((a, b) => {\n      if (sortType === 'name') {\n        return a.name.localeCompare(b.name);\n      }\n      return a.number - b.number;\n    });\n\n  const paginatedPokemons = filteredPokemons.slice((page - 1) * itemsPerPage, page * itemsPerPage);\n\n  return (\n    <div className=\"dashboard\">\n      <Typography variant=\"h4\" gutterBottom>Content Management Dashboard</Typography>\n      <TextField\n        label=\"Search PokÃ©mon\"\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        onChange={e => setSearchTerm(e.target.value)}\n      />\n      <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\n        <InputLabel>Sort By</InputLabel>\n        <Select\n          value={sortType}\n          onChange={e => setSortType(e.target.value)}\n          label=\"Sort By\"\n        >\n          <MenuItem value=\"number\">Number</MenuItem>\n          <MenuItem value=\"name\">Name</MenuItem>\n        </Select>\n      </FormControl>\n      <Grid container spacing={3}>\n        {paginatedPokemons.map(pokemon => (\n          <Grid item xs={12} sm={6} md={4} lg={3} key={pokemon.id}>\n            <Card>\n              <CardMedia\n                component=\"img\"\n                alt={pokemon.name}\n                height=\"140\"\n                image={pokemon.image}\n                title={pokemon.name}\n                loading=\"lazy\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {pokemon.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  #{pokemon.number}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n      <Pagination\n        count={Math.ceil(filteredPokemons.length / itemsPerPage)}\n        page={page}\n        onChange={(event, value) => setPage(value)}\n      />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container, CssBaseline } from '@material-ui/core';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename=\"/content-management-dashboard\">\n      <CssBaseline />\n      <Container>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n          </Switch>\n        </div>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport { ApolloProvider, InMemoryCache, ApolloClient } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokemon2.vercel.app/',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}