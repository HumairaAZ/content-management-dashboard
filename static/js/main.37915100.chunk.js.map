{"version":3,"sources":["components/Dashboard.js","App.js","index.js"],"names":["GET_POKEMONS","gql","_templateObject","_taggedTemplateLiteral","Dashboard","loading","error","data","useQuery","searchTerm","setSearchTerm","useState","sortType","setSortType","_jsx","CircularProgress","children","filteredPokemons","pokemons","filter","pokemon","name","toLowerCase","includes","sort","a","b","localeCompare","number","_jsxs","className","Typography","variant","gutterBottom","TextField","label","fullWidth","margin","onChange","e","target","value","FormControl","InputLabel","Select","MenuItem","Grid","container","spacing","map","item","xs","sm","md","lg","Card","CardMedia","component","alt","height","image","title","CardContent","color","id","App","Router","basename","CssBaseline","Container","Switch","Route","path","exact","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","React","StrictMode","document","getElementById"],"mappings":"gZAKA,MAAMA,EAAeC,YAAGC,MAAAC,YAAA,wGA6ETC,MAlEf,WACE,MAAM,QAAEC,EAAO,MAAEC,EAAK,KAAEC,GAASC,YAASR,IACnCS,EAAYC,GAAiBC,mBAAS,KACtCC,EAAUC,GAAeF,mBAAS,UAEzC,GAAIN,EAAS,OAAOS,cAACC,IAAgB,IACrC,GAAIT,EAAO,OAAOQ,cAAA,KAAAE,SAAG,aAErB,MAAMC,EAAmBV,EAAKW,SAC3BC,QAAOC,GAAWA,EAAQC,KAAKC,cAAcC,SAASd,EAAWa,iBACjEE,MAAK,CAACC,EAAGC,IACS,SAAbd,EACKa,EAAEJ,KAAKM,cAAcD,EAAEL,MAEzBI,EAAEG,OAASF,EAAEE,SAGxB,OACEC,eAAA,OAAKC,UAAU,YAAWd,SAAA,CACxBF,cAACiB,IAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAjB,SAAC,iCACtCF,cAACoB,IAAS,CACRC,MAAM,oBACNH,QAAQ,WACRI,WAAS,EACTC,OAAO,SACPC,SAAUC,GAAK7B,EAAc6B,EAAEC,OAAOC,SAExCZ,eAACa,IAAW,CAACV,QAAQ,WAAWI,WAAS,EAACC,OAAO,SAAQrB,SAAA,CACvDF,cAAC6B,IAAU,CAAA3B,SAAC,YACZa,eAACe,IAAM,CACLH,MAAO7B,EACP0B,SAAUC,GAAK1B,EAAY0B,EAAEC,OAAOC,OACpCN,MAAM,UAASnB,SAAA,CAEfF,cAAC+B,IAAQ,CAACJ,MAAM,SAAQzB,SAAC,WACzBF,cAAC+B,IAAQ,CAACJ,MAAM,OAAMzB,SAAC,eAG3BF,cAACgC,IAAI,CAACC,WAAS,EAACC,QAAS,EAAEhC,SACxBC,EAAiBgC,KAAI7B,GACpBN,cAACgC,IAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEtC,SACrCa,eAAC0B,IAAI,CAAAvC,SAAA,CACHF,cAAC0C,IAAS,CACRC,UAAU,MACVC,IAAKtC,EAAQC,KACbsC,OAAO,MACPC,MAAOxC,EAAQwC,MACfC,MAAOzC,EAAQC,KACfhB,QAAQ,SAEVwB,eAACiC,IAAW,CAAA9C,SAAA,CACVF,cAACiB,IAAU,CAACE,cAAY,EAACD,QAAQ,KAAKyB,UAAU,KAAIzC,SACjDI,EAAQC,OAEXQ,eAACE,IAAU,CAACC,QAAQ,QAAQ+B,MAAM,gBAAgBN,UAAU,IAAGzC,SAAA,CAAC,IAC5DI,EAAQQ,iBAf2BR,EAAQ4C,UAwB/D,EC3DeC,MAff,WACE,OACEpC,eAACqC,IAAM,CAACC,SAAS,gCAA+BnD,SAAA,CAC9CF,cAACsD,IAAW,IACZtD,cAACuD,IAAS,CAAArD,SACRF,cAAA,OAAKgB,UAAU,MAAKd,SAClBF,cAACwD,IAAM,CAAAtD,SACLF,cAACyD,IAAK,CAACC,KAAK,IAAIC,OAAK,EAAChB,UAAWrD,YAM7C,E,2BCbA,MAAMsE,EAAS,IAAIC,IAAa,CAC9BC,IAAK,uCACLC,MAAO,IAAIC,MAGbC,IAASC,OACPlE,cAACmE,IAAc,CAACP,OAAQA,EAAO1D,SAC7BF,cAACoE,IAAMC,WAAU,CAAAnE,SACfF,cAACmD,EAAG,QAGRmB,SAASC,eAAe,Q","file":"static/js/main.37915100.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Dashboard.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { TextField, Grid, Card, CardContent, Typography, CardMedia, CircularProgress, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\n\nconst GET_POKEMONS = gql`\n  {\n    pokemons(first: 151) {\n      id\n      number\n      name\n      image\n    }\n  }\n`;\n\nfunction Dashboard() {\n  const { loading, error, data } = useQuery(GET_POKEMONS);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortType, setSortType] = useState('number');\n\n  if (loading) return <CircularProgress />;\n  if (error) return <p>Error :(</p>;\n\n  const filteredPokemons = data.pokemons\n    .filter(pokemon => pokemon.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    .sort((a, b) => {\n      if (sortType === 'name') {\n        return a.name.localeCompare(b.name);\n      }\n      return a.number - b.number;\n    });\n\n  return (\n    <div className=\"dashboard\">\n      <Typography variant=\"h4\" gutterBottom>Content Management Dashboard</Typography>\n      <TextField\n        label=\"Search PokÃ©mon\"\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        onChange={e => setSearchTerm(e.target.value)}\n      />\n      <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\n        <InputLabel>Sort By</InputLabel>\n        <Select\n          value={sortType}\n          onChange={e => setSortType(e.target.value)}\n          label=\"Sort By\"\n        >\n          <MenuItem value=\"number\">Number</MenuItem>\n          <MenuItem value=\"name\">Name</MenuItem>\n        </Select>\n      </FormControl>\n      <Grid container spacing={3}>\n        {filteredPokemons.map(pokemon => (\n          <Grid item xs={12} sm={6} md={4} lg={3} key={pokemon.id}>\n            <Card>\n              <CardMedia\n                component=\"img\"\n                alt={pokemon.name}\n                height=\"140\"\n                image={pokemon.image}\n                title={pokemon.name}\n                loading=\"lazy\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {pokemon.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  #{pokemon.number}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container, CssBaseline } from '@material-ui/core';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename=\"/content-management-dashboard\">\n      <CssBaseline />\n      <Container>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n          </Switch>\n        </div>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport { ApolloProvider, InMemoryCache, ApolloClient } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokemon2.vercel.app/',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}